---
qbittorrent:
  # initContainers:
  #   update-volume-permission:
  #     image: busybox
  #     command: ["sh", "-c", "chown -R 1000:1000 /config"]
  #     volumeMounts:
  #       - name: config
  #         mountPath: /config
  #     securityContext:
  #       runAsUser: 0
  image:
    repository: ghcr.io/k8s-at-home/qbittorrent
    tag: v4.3.9
  env:
    TZ: "America/Chicago"
  service:
    bittorrent:
      enabled: true
      type: ClusterIP
      ports:
        bittorrent:
          enabled: true
          port: 18289
          protocol: TCP
          targetPort: 18289
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      hosts:
        - host: qb.zzd.ai
          paths:
            - path: /
              pathType: Prefix
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-staging"
        nginx.ingress.kubernetes.io/auth-url: "https://auth.zzd.ai/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.zzd.ai/oauth2/start?rd=https://$host$uri"
        hajimari.io/enable: "true"
      tls:
        - hosts:
            - qb.zzd.ai
          secretName: my-certs-qbittorrent
  metrics:
    enabled: false
    # enabled: true
    # exporter:
    #   image:
    #     repository: docker.io/esanchezm/prometheus-qbittorrent-exporter
    #     tag: v1.2.0
    # serviceMonitor:
    #   interval: 1m
    #   scrapeTimeout: 10s
    # prometheusRule:
    #   enabled: true
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"
  securityContext:
    capabilities:
      add: ["NET_ADMIN"]
  persistence:
    config:
      enabled: true
      existingClaim: qbittorrent-config
    media:
      enabled: true
      existingClaim: qbittorrent-downloads
      mountPath: /downloads
  podAnnotations:
    setGateway: "true"
  resources:
    requests:
      memory: 250Mi
      cpu: 500m
    limits:
      memory: 6000Mi
