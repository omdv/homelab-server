---
postgresql:
  global:
    postgresql:
      auth:
        username: postgres
        existingSecret: "postgres-secret"

  fullnameOverride: "postgresql"
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 13.5.0-debian-10-r76
    pullPolicy: IfNotPresent
    pullSecrets: []
    debug: false

  primary:
    service:
      type: "ClusterIP"
      ports:
        postgresql: 5432
    sidecars:
      - name: ts-sidecar
        image: "tailscale/tailscale:1.29.20"
        imagePullPolicy: Always
        env:
          - name: TS_AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: TAILSCALE_AUTH_KEY
          - name: EXTRA_UP_ARGS
            value: "--accept-routes"
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 10
      successThreshold: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    persistence:
      enabled: true
      existingClaim: postgres
      mountPath: /bitnami/postgresql
      accessModes:
        - ReadWriteOnce
    podSecurityContext:
      enabled: true
      fsGroup: 1000
    containerSecurityContext:
      enabled: true
      runAsUser: 1000

  volumePermissions:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 10-debian-10-r305
      pullPolicy: IfNotPresent
      pullSecrets: []
    securityContext:
      runAsUser: 0
