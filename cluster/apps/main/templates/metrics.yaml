---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  destination:
    namespace: metrics
    server: {{ .Values.spec.destination.server }}
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 36.2.1
    helm:
      skipCrds: true
      values: |-
        fullnameOverride: prom
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        grafana:
          enabled: false
        prometheus-node-exporter:
          fullnameOverride: node-exporter
        kubeStateMetrics:
          enabled: true
        prometheus:
          additionalPrometheusRules:
            - name: custom-prometheus-rules
              groups:
                - name: node.rules
                  rules:
                    - record: cluster:node_cpu:sum_rate5m
                      expr: sum(rate(node_cpu{mode!="idle"}[5m]))
                    - record: cluster:node_cpu:ratio
                      expr: cluster:node_cpu:rate5m / count(sum(node_cpu) BY (instance, cpu))
                - name: kubernetes.rules
                  rules:
                    - record: pod_name:container_memory_usage_bytes:sum
                      expr:
                        sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
                        (pod_name)
                    - record: pod_name:container_spec_cpu_shares:sum
                      expr: sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) BY (pod_name)
                    - record: pod_name:container_cpu_usage:sum
                      expr:
                        sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
                        BY (pod_name)
                    - record: pod_name:container_fs_usage_bytes:sum
                      expr: sum(container_fs_usage_bytes{container_name!="POD",pod_name!=""}) BY (pod_name)
                    - record: namespace:container_memory_usage_bytes:sum
                      expr: sum(container_memory_usage_bytes{container_name!=""}) BY (namespace)
                    - record: namespace:container_spec_cpu_shares:sum
                      expr: sum(container_spec_cpu_shares{container_name!=""}) BY (namespace)
                    - record: namespace:container_cpu_usage:sum
                      expr:
                        sum(rate(container_cpu_usage_seconds_total{container_name!="POD"}[5m]))
                        BY (namespace)
                    - record: cluster:memory_usage:ratio
                      expr:
                        sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
                        (cluster) / sum(machine_memory_bytes) BY (cluster)
                    - record: cluster:container_spec_cpu_shares:ratio
                      expr:
                        sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) / 1000
                        / sum(machine_cpu_cores)
                    - record: cluster:container_cpu_usage:ratio
                      expr:
                        sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
                        / sum(machine_cpu_cores)
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
