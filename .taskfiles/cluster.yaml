---
version: "3"

tasks:
  zfspv:
    desc: Install zfs-localpv
    dir: ./
    cmds:
      - "kubectl apply -f https://openebs.github.io/charts/zfs-operator.yaml"
      - "kubectl apply -f {{.CLUSTER_DIR}}/init/zfs-sc.yaml"
      - 'kubectl patch storageclass local-path -p ''{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'''
      - 'kubectl patch storageclass zfspv -p ''{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'''

  vault:install:
    desc: Install vault
    dir: ./
    cmds:
      - "kubectl create namespace vault --dry-run=client -o yaml | kubectl apply -f -"
      - "kubectl create secret generic kms-creds -n vault --from-file=.cloud-config/credentials.json --dry-run=client -o yaml | kubectl apply -f -"
      - "helm repo add hashicorp https://helm.releases.hashicorp.com && helm repo update"
      - "helm install vault hashicorp/vault -n vault --version {{.VAULT_HELM_VERSION}} -f {{.CLUSTER_DIR}}/init/vault-values.yaml"

  vault:init:
    desc: Initialize vault
    dir: ./
    cmds:
      - "kubectl exec -n vault vault-0 -- vault operator init -format=json > .cloud-config/vault-keys.json"

  argo:install:
    desc: Install argo
    dir: ./
    cmds:
      - "kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -"
      - "kubectl apply -k {{.CLUSTER_DIR}}/init/argocd -n argocd --dry-run=client -o yaml | kubectl apply -f -"
      # - "helm repo add argo https://argoproj.github.io/argo-helm && helm repo update"
      # - "helm install argocd argo/argo-cd -n argocd --version {{.ARGO_HELM_VERSION}} -f {{.CLUSTER_DIR}}/init/argocd-values.yaml"

  argo:init:
    desc: Initialize argo - expecting port-forward svc/argocd-server to 8080
    dir: ./
    cmds:
      - "argocd login localhost:8080 --insecure --username admin \
        --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d)"
      - "argocd account update-password --current-password \
        $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d) \
        --new-password {{.HOMELAB_ARGOCD_PASSWORD}}"
      - "kubectl delete secret/argocd-initial-admin-secret -n argocd "

  argo:uninstall:
    desc: Uninstall argo
    dir: ./
    cmds:
      - "kubectl delete -k {{.CLUSTER_DIR}}/init/argocd -n argocd"
