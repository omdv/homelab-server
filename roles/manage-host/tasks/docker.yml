---
- name: preparing for docker installation
  apt:
    name: "{{ package }}"
  vars:
    package:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip

- name: install docker pip
  shell: /usr/bin/pip3 install docker

- name: add docker group
  group:
    name: docker
    state: present

- name: add user to docker group
  user: name={{ user }}
        groups=docker
        append=yes

- name: get certificate
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  args:
    warn: false

- name: add repository
  shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"

- name: install docker package
  apt:
    name: docker-ce
    update_cache: yes

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    owner: root
    group: root
    mode: 0755
    force: yes
  vars:
    version: 1.23.2

# - name: create drop-in directory
#   file:
#     path: /etc/systemd/system/docker.service.d
#     state: directory
#     mode: 0755

# - name: transfer file with drop-in settings
#   copy:
#     src: remote_api.conf
#     dest: /etc/systemd/system/docker.service.d/remote_api.conf
#     owner: root
#     group: root
#     mode: 0755

# - name: transfer daemon conf file
#   template:
#     src: daemon.json.j2
#     dest: /etc/docker/daemon.json
#     owner: root
#     group: root
#     mode: 0755

# - name: restart service
#   systemd:
#     state: restarted
#     daemon_reload: yes
#     name: docker

# - name: docker login
#   shell: docker login -u {{ lookup('env','DOCKER_USER') }} -p {{ lookup('env','DOCKER_PASS') }}