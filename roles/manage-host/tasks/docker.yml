---
- name: preparing for docker installation
  apt:
    name: "{{ package }}"
  vars:
    package:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip
  become: yes

- name: install docker pip
  shell: /usr/bin/pip3 install docker

- name: add docker group
  group:
    name: docker
    state: present
  become: yes

- name: add user to docker group
  user: name={{ user }}
        groups=docker
        append=yes
  become: yes

- name: get certificate
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  become: yes
  args:
    warn: false

- name: add repository
  shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
  become: yes

- name: install docker package
  apt:
    name: docker-ce
    update_cache: yes
  become: yes

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    owner: root
    group: root
    mode: 0755
    force: yes
  become: yes
  vars:
    version: 1.23.2

- name: create drop-in directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755
  become: yes

- name: transfer file with drop-in settings
  copy:
    src: remote_api.conf
    dest: /etc/systemd/system/docker.service.d/remote_api.conf
    owner: root
    group: root
    mode: 0755
  become: yes

- name: transfer daemon conf file
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0755
  become: yes

- name: restart service
  systemd:
    state: restarted
    daemon_reload: yes
    name: docker
  become: yes

# - name: docker login
#   shell: docker login -u {{ lookup('env','DOCKER_USER') }} -p {{ lookup('env','DOCKER_PASS') }}