---
- name: preparing for docker installation
  apt:
    name: "{{ package }}"
  vars:
    package:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip

- name: install pip docker for ansible
  shell: /usr/bin/pip3 install docker

- name: add docker group
  group:
    name: docker
    state: present

- name: add user to docker group
  user: name={{ user }}
        groups=docker
        append=yes

- name: get certificate
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  args:
    warn: false

- name: add repository
  shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

- name: install docker package
  apt:
    name: docker-ce
    update_cache: yes

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    owner: root
    group: root
    mode: 0755
    force: yes
  vars:
    version: 1.24.1

- name: enable passwordless sudo while deploying
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^om'
    line: 'om ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: delete old docker machine
  command: /usr/local/bin/docker-machine rm -f {{ docker_machine_name }}
  delegate_to: 127.0.0.1
  become: no

- name: create new docker machine
  command: /usr/local/bin/docker-machine create --driver generic \
    --generic-ip-address={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} \
    --generic-ssh-key ~/.ssh/id_rsa \
    --generic-ssh-user={{ user }} {{ docker_machine_name }}
  delegate_to: 127.0.0.1
  become: no

- name: disable passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: absent
    regexp: '^om'
    line: 'om ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

# # ----------- install nvidia-container-toolkit
# - name: install nvidia-container-toolkit
#   shell: distribution=$(. /etc/os-release;echo $ID$VERSION_ID) &&
#     curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - &&
#     curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list &&
#     apt-get update && 
#     apt-get install -y nvidia-container-toolkit

- name: restart docker
  shell: systemctl restart docker